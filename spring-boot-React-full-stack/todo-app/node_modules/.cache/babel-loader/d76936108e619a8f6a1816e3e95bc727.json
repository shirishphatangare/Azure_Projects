{"ast":null,"code":"import _classCallCheck from \"c:\\\\git-repos\\\\Azure_Projects\\\\spring-boot-React-full-stack\\\\todo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\git-repos\\\\Azure_Projects\\\\spring-boot-React-full-stack\\\\todo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\git-repos\\\\Azure_Projects\\\\spring-boot-React-full-stack\\\\todo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\git-repos\\\\Azure_Projects\\\\spring-boot-React-full-stack\\\\todo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\git-repos\\\\Azure_Projects\\\\spring-boot-React-full-stack\\\\todo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"c:\\\\git-repos\\\\Azure_Projects\\\\spring-boot-React-full-stack\\\\todo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"c:\\\\git-repos\\\\Azure_Projects\\\\spring-boot-React-full-stack\\\\todo-app\\\\src\\\\components\\\\todo\\\\WelcomeComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport HelloWorldService from '../../api/todo/HelloWorldService.js';\n\nvar WelcomeComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WelcomeComponent, _Component);\n\n  // WelcomeComponent maintains state as well as props. Note constructor(props)\n  function WelcomeComponent(props) {\n    var _this;\n\n    _classCallCheck(this, WelcomeComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WelcomeComponent).call(this, props));\n    _this.state = {\n      welcomeMessage: ''\n    };\n    _this.retrieveWelcomeMessage = _this.retrieveWelcomeMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSuccessfulResponse = _this.handleSuccessfulResponse.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(WelcomeComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Welcome!\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Welcome \", this.props.match.params.name, \".\", \"You can manage your todos \", React.createElement(Link, {\n        to: \"/todos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"here\"), \".\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Click here to get a customized welcome message.\", React.createElement(\"button\", {\n        onClick: this.retrieveWelcomeMessage,\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Get Welcome Message\")), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.welcomeMessage));\n    }\n  }, {\n    key: \"retrieveWelcomeMessage\",\n    value: function retrieveWelcomeMessage() {\n      var _this2 = this;\n\n      // HelloWorldService.executeHelloWorldService()\n      // .then( response => this.handleSuccessfulResponse(response) )\n      // HelloWorldService.executeHelloWorldBeanService()\n      // .then( response => this.handleSuccessfulResponse(response) )\n      // Getting a Promise back with callback functions like .then(), .catch()\n      HelloWorldService.executeHelloWorldPathVariableService(this.props.match.params.name).then(function (response) {\n        return _this2.handleSuccessfulResponse(response);\n      }).catch(function (error) {\n        return _this2.handleError(error);\n      });\n    }\n  }, {\n    key: \"handleSuccessfulResponse\",\n    value: function handleSuccessfulResponse(response) {\n      console.log(response); // response.data is a JSON object. It can not be displayed on web page. We need to display 'message' property of that JSON object \n\n      this.setState({\n        welcomeMessage: response.data.message\n      });\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(error) {\n      console.log(error.response);\n      var errorMessage = '';\n      if (error.message) errorMessage += error.message;\n\n      if (error.response && error.response.data) {\n        errorMessage += error.response.data.message;\n      }\n\n      this.setState({\n        welcomeMessage: errorMessage\n      });\n    }\n  }]);\n\n  return WelcomeComponent;\n}(Component);\n\nexport default WelcomeComponent;","map":{"version":3,"sources":["c:\\git-repos\\Azure_Projects\\spring-boot-React-full-stack\\todo-app\\src\\components\\todo\\WelcomeComponent.jsx"],"names":["React","Component","Link","HelloWorldService","WelcomeComponent","props","state","welcomeMessage","retrieveWelcomeMessage","bind","handleSuccessfulResponse","handleError","match","params","name","executeHelloWorldPathVariableService","then","response","catch","error","console","log","setState","data","message","errorMessage"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;;IAEMC,gB;;;;;AAEL;AACG,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAElB,0FAAMA,KAAN;AAEG,UAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;AAIA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BC,IAA5B,uDAA9B;AACA,UAAKC,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BD,IAA9B,uDAAhC;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,uDAAnB;AAVe;AAWlB;;;;6BAEQ;AACL,aACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEa,KAAKJ,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,IAFrC,qCAI8B,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJ9B,MAFJ,EAQI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAEI;AAAQ,QAAA,OAAO,EAAE,KAAKN,sBAAtB;AACI,QAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,CARJ,EAaI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWC,cADhB,CAbJ,CADJ;AAoBH;;;6CAEwB;AAAA;;AACrB;AACA;AAEA;AACA;AAEH;AACGJ,MAAAA,iBAAiB,CAACY,oCAAlB,CAAuD,KAAKV,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,IAA/E,EACKE,IADL,CACU,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACP,wBAAL,CAA8BO,QAA9B,CAAJ;AAAA,OADlB,EAEKC,KAFL,CAEW,UAAAC,KAAK;AAAA,eAAI,MAAI,CAACR,WAAL,CAAiBQ,KAAjB,CAAJ;AAAA,OAFhB;AAGH;;;6CAEwBF,Q,EAAU;AAC/BG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAD+B,CAE/B;;AACA,WAAKK,QAAL,CAAc;AAAEf,QAAAA,cAAc,EAAEU,QAAQ,CAACM,IAAT,CAAcC;AAAhC,OAAd;AACH;;;gCAEWL,K,EAAO;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAlB;AACA,UAAIQ,YAAY,GAAG,EAAnB;AACA,UAAIN,KAAK,CAACK,OAAV,EACIC,YAAY,IAAIN,KAAK,CAACK,OAAtB;;AACJ,UAAIL,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAeM,IAArC,EAA2C;AACvCE,QAAAA,YAAY,IAAIN,KAAK,CAACF,QAAN,CAAeM,IAAf,CAAoBC,OAApC;AACH;;AACD,WAAKF,QAAL,CAAc;AAAEf,QAAAA,cAAc,EAAEkB;AAAlB,OAAd;AACH;;;;EAnE0BxB,S;;AAwE/B,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport HelloWorldService from '../../api/todo/HelloWorldService.js'\n\nclass WelcomeComponent extends Component {\n\n\t// WelcomeComponent maintains state as well as props. Note constructor(props)\n    constructor(props) {\n        \n    \tsuper(props)\n        \n        this.state = {\n            welcomeMessage: ''\n        }\n        \n        this.retrieveWelcomeMessage = this.retrieveWelcomeMessage.bind(this)\n        this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this)\n        this.handleError = this.handleError.bind(this)\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Welcome!</h1>\n                <div className=\"container\">\n                    {/* 'name' is passed as a path parameter */}\n                    Welcome {this.props.match.params.name}.\n                    {/* Adding link for todos page. If we use <a> here, entire page gets refreshed. We do not want entire page refresh for single-page applications. */}\n                    You can manage your todos <Link to=\"/todos\">here</Link>.\n                </div>\n                <div className=\"container\">\n                    Click here to get a customized welcome message.\n                    <button onClick={this.retrieveWelcomeMessage}\n                        className=\"btn btn-success\">Get Welcome Message</button>\n                </div>\n                <div className=\"container\">\n                    {this.state.welcomeMessage}\n                </div>\n\n            </>\n        )\n    }\n\n    retrieveWelcomeMessage() {\n        // HelloWorldService.executeHelloWorldService()\n        // .then( response => this.handleSuccessfulResponse(response) )\n\n        // HelloWorldService.executeHelloWorldBeanService()\n        // .then( response => this.handleSuccessfulResponse(response) )\n    \t\n    \t// Getting a Promise back with callback functions like .then(), .catch()\n        HelloWorldService.executeHelloWorldPathVariableService(this.props.match.params.name)\n            .then(response => this.handleSuccessfulResponse(response))\n            .catch(error => this.handleError(error))\n    }\n\n    handleSuccessfulResponse(response) {\n        console.log(response)\n        // response.data is a JSON object. It can not be displayed on web page. We need to display 'message' property of that JSON object \n        this.setState({ welcomeMessage: response.data.message })\n    }\n\n    handleError(error) {\n        console.log(error.response)\n        let errorMessage = '';\n        if (error.message)\n            errorMessage += error.message\n        if (error.response && error.response.data) {\n            errorMessage += error.response.data.message\n        }\n        this.setState({ welcomeMessage: errorMessage })\n    }\n\n}\n\n\nexport default WelcomeComponent"]},"metadata":{},"sourceType":"module"}